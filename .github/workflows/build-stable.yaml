name: "Stable branch continuous build"
on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch: ~

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
        php-versions: ['8.0']
        composer-versions: ['composer:v2']
      fail-fast: false
    name: Building on ${{ matrix.php-versions }} @ ${{ matrix.os }} with ${{ matrix.composer-versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master
          fetch-depth: 0
      - name: Install & Configure PHP
        uses: shivammathur/setup-php@2.11.0
        with:
          php-version: ${{ matrix.php-versions }}
          tools: ${{ matrix.composer-versions }}
          extensions: xdebug, mbstring, posix, gmp, bcmath
      - name: Check Versions
        run: |
          php -v
          php -m
          composer --version
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: composer install --no-progress --no-suggest --prefer-dist
      - name: Run Tests
        run: php bin/grumphp run --no-interaction
        env:
          XDEBUG_MODE: coverage
      - name: fix code coverage paths
        if: contains(matrix.os, 'ubuntu-latest')
        working-directory: .
        run: |
          sed -i 's/\/home\/runner\/work\/types\/types\//\/github\/workspace\//g' build/phpunit/logs/clover.xml
          sed -i 's/\/home\/runner\/work\/types\/types\//\/github\/workspace\//g' build/phpunit/logs/junit.xml
      - name: Starting SonarCloud Scan
        if: contains(matrix.os, 'ubuntu-latest')
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  make_badge:
    needs: build
    runs-on: ubuntu-latest
    if: contains(github.ref, 'master')
    steps:
      - name: Generate Build Badge, only on Cont. Build.
        uses: Schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 027dcddb6a1dc1995a2a47e528aaf020
          filename: build-stable.json
          label: Stable Build
          message: passing
          color: green
